# -*- coding: utf-8 -*-
"""condional_unassigned.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PzxM_kEqZ0M2h842pBVDEsUsZc5w0Ymn
"""

import pandas as pd
import numpy as np
!pip install pivottablejs
from pivottablejs import pivot_ui
from IPython.display import HTML
from IPython.display import IFrame
import json, io

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_table("/content/drive/MyDrive/Colab Notebooks/WA102_WHO/nextstrain_metadata_WA102_WHO _v3.tsv", sep='\t')

df.head(2)

df.drop([ 'date','length', 'submitting_lab', 'WHO_label', 'clade', 'Nextclade_pango', 'totalMissing', 'lineage'], axis=1, inplace=True)

df.head(2)

def label(x):
    if x < 10.0:
        return 'Ns <10%'
    if 10.0 <= x < 30.0:
        return 'Ns (10-30)%'
    if 30.0 <= x < 50.0:
        return 'Ns (30-50)%'
    return 'Ns >50%'

df['label'] = df['N-content(%)'].apply(label)

df.head(2)

df.to_excel("unassigned_N-content.xlsx", index=False)

# df_fig.head(2)

def pivot_cht_html(df, outfile_path = "Lineage.html", url="",
    width="100%", height="400",json_kwargs='',  **kwargs):
  with io.open(outfile_path, 'wt', encoding='utf8') as outfile:
      csv = df.to_csv(encoding='utf8')
      if hasattr(csv, 'decode'):
          csv = csv.decode('utf8')
      outfile.write(TEMPLATE %
            dict(csv=csv, kwargs=json.dumps(kwargs),json_kwargs=json_kwargs))

  IFrame(src=url or outfile_path, width=width, height=height)
  return HTML(outfile_path)

pivot_ui(df,outfile_path='Lineage.html')
HTML('Lineage.html')

df_fig.to_excel("Lineage.xlsx", index=False)

df.to_csv('Lineage_old.csv', index=False)

df.to_excel("Lineage_old.xlsx", index=False)